<?xml version="1.0"?>
<s:WindowedApplication
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:mx="library://ns.adobe.com/flex/mx"
        xmlns:s="library://ns.adobe.com/flex/spark" creationComplete="onCreationCompleted(event)">
    <fx:Script><![CDATA[
        import org.apache.flex.collections.VectorCollection;

        import service.IvyDownloadProgressVO;

        [Embed(source='assets/tickers.json', mimeType='application/octet-stream')]
        private static const JsonClass:Class;

        import mx.controls.Alert;
        import mx.events.FlexEvent;

        import service.IvyService;

        private var ivyService:IvyService;

        [Bindable]
        private var collection:VectorCollection = new VectorCollection();

        private function onCreationCompleted(event:FlexEvent):void {
            var tickers:Vector.<String> = getTickers();
            ivyService = new IvyService();
            ivyService.run(tickers, onServiceCompleted, onServiceProgress, onServiceError);
        }

        private function onServiceProgress(data:IvyDownloadProgressVO):void {
            if(data && data.data){
                collection.addItem(data.data);
            }

            statusText.text = "Downloaded: " + Math.round(data.value * 10000)/100 + "%"
        }

        private function onServiceCompleted():void {

        }

        private function onServiceError():void {

        }

        private function getTickers():Vector.<String> {
            var result:Vector.<String> = new <String>[];
            var str:String = new JsonClass();
            var obj:Object = JSON.parse(str);
            for each (var item:Object in obj) {
                result.push(item.rts);
            }

            result.sort(function (x:String, y:String):Number {
                if(x < y ) {
                    return -1
                }else if(x == y){
                    return 0
                }
                return 1;
            });
            return result;
        }
        ]]></fx:Script>


    <mx:DataGrid id="dg" width="100%" height="100%" rowCount="4" dataProvider="{collection}">
        <mx:columns>
            <mx:DataGridColumn dataField="ticker" headerText="Ticker"/>
            <mx:DataGridColumn dataField="averageValue" headerText="Average (12mo)"/>
            <mx:DataGridColumn dataField="lastValue" headerText="Last (15min)"/>
            <mx:DataGridColumn dataField="percents" headerText="Percents"/>
        </mx:columns>
    </mx:DataGrid>
</s:WindowedApplication>
